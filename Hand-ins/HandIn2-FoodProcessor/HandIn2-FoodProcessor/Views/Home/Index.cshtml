@using System.Linq;
@using System.Collections.Specialized;
@using HandIn2_FoodProcessor.Models;

@model List<Posts>

@{
    ViewBag.Title = "Happy little place";
}

@section scripts{ 
    @Scripts.Render("~/Scripts/angular.js")
    @Scripts.Render("~/Scripts/Angular/proteinneed-controller.js")}

<h2>@ViewBag.Title.</h2>

<div ng-app="proteinNeed">
    <div class="col-sm-6" ng-controller="pNeedController">
        <table>
            <tr>
                <td>Product</td>
                <td>Grams consumed</td>
                <td>Total amount of proteins</td>
            </tr>
            @if (Model.Count > 0)
            {
                foreach (var item in Model)
                {
                    <tr>
                        <td>@item.Consumable.ConsumableName</td>
                        <td>@item.GramProtein</td>
                        <td>@(item.GramProtein * item.Consumable.ProteinPer100Gram)</td>
                    </tr>
                }
            }
            else
            {
                <tr>no items in list :D</tr>
            }
            <tr>
                <td>
                    <input type="text" ng-model="product.picked" id="productID" oninput="find()" />


    <script>
    var uri = 'api/products';

    $(document).ready(function () {
        // Send an AJAX request
        $.getJSON(uri)
            .done(function (data) {
                // On success, 'data' contains a list of products.
                $.each(data, function (key, item) {
                    // Add a list item for the product.
                    $('<li>', { text: formatItem(item) }).appendTo($('#products'));
                });
            });
    });

    function formatItem(item) {
        //return item.Name + ': ' + item.Gram + 'gram';
        return item.Gram + 'gram';
    }

    function find() {
        var id = $('#prodId').val();
        $.getJSON(uri + '/' + id)
            .done(function (data) {
                $('#product').text(formatItem(data));
            })
            .fail(function (jqXHR, textStatus, err) {
                $('#product').text('Error: ' + err);
            });
    }

   </script>

                </td>
                <td>
                    <input type="number" min="0" max="99" ng-model="consumed" />
                </td>
                <td>
                    {{pEaten()}}
                </td>
                <p id="productID"></p>
            </tr>
            <tr><p id="productID"></p>{{showProduct()}}</tr>
            
        </table>

    </div>
    <div class="col-sm-6" ng-controller="pNeedController">

            <input type="number" ng-model="weight" min="0"" required />

            <select ng-model="address.state"
                    ng-options="state.lookupCode as state.description for state in lov_state"></select>
            <tt>{{pNeed()}} {{address.state}} <-- den udregner ikke, men ændre værdien ._.</tt>

        <p>En form til at tilføre et nyt produkt, lige som i opgave 1</p>
    </div>
</div>
