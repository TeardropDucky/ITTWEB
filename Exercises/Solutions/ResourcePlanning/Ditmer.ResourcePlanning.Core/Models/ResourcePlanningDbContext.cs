// <auto-generated>
// ReSharper disable RedundantUsingDirective
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable RedundantNameQualifier
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Data.Entity.Infrastructure;
using System.Linq.Expressions;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity;
using System.Data;
using System.Data.Entity.Core.Objects;
using System.Data.SqlClient;
using System.Data.SqlTypes;
using System.Data.Entity.ModelConfiguration;
using System.Threading;
using DatabaseGeneratedOption = System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption;

namespace Ditmer.ResourcePlanning.Core.Models
{
    public class ResourcePlanningDbContext : DbContext, IResourcePlanningDbContext
    {
        public DbSet<Activity> Activities { get; set; } // Activity
        public DbSet<BudgetHoursOnActivity> BudgetHoursOnActivities { get; set; } // BudgetHoursOnActivity
        public DbSet<BudgetPeriode> BudgetPeriodes { get; set; } // BudgetPeriode
        public DbSet<Employee> Employees { get; set; } // Employee
        public DbSet<SchemaVersion> SchemaVersions { get; set; } // SchemaVersions
        
        static ResourcePlanningDbContext()
        {
            System.Data.Entity.Database.SetInitializer<ResourcePlanningDbContext>(null);
        }

        public ResourcePlanningDbContext()
            : base("Name=ResourcePlanningDatabaseConnectionString")
        {
			this.Configuration.LazyLoadingEnabled = false;
        }

        public ResourcePlanningDbContext(string connectionString) : base(connectionString)
        {
        }

        public ResourcePlanningDbContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model) : base(connectionString, model)
        {
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == DBNull.Value);
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new ActivityConfiguration());
            modelBuilder.Configurations.Add(new BudgetHoursOnActivityConfiguration());
            modelBuilder.Configurations.Add(new BudgetPeriodeConfiguration());
            modelBuilder.Configurations.Add(new EmployeeConfiguration());
            modelBuilder.Configurations.Add(new SchemaVersionConfiguration());
        }

        public static DbModelBuilder CreateModel(DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new ActivityConfiguration(schema));
            modelBuilder.Configurations.Add(new BudgetHoursOnActivityConfiguration(schema));
            modelBuilder.Configurations.Add(new BudgetPeriodeConfiguration(schema));
            modelBuilder.Configurations.Add(new EmployeeConfiguration(schema));
            modelBuilder.Configurations.Add(new SchemaVersionConfiguration(schema));
            return modelBuilder;
        }
        
        // Stored Procedures
    }
}
// </auto-generated>
